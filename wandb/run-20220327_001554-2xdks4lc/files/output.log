epochs : 0
############################################
epochs: 101 cnt: 50
#train: 0.9571 val: 0.8140 test: 0.8310 best_test: 0.8250 best_val: 0.8220
#train: 0.9572 val: 0.8033 test: 0.8165 best_test: 0.8113 best_val: 0.8190
epochs : 250
############################################
epochs: 325 cnt: 100
#train: 0.9714 val: 0.8000 test: 0.8310 best_test: 0.8250 best_val: 0.8220
#train: 0.9713 val: 0.7848 test: 0.8182 best_test: 0.8113 best_val: 0.8190
epochs : 500
epochs : 750
epochs : 1000
############################################
epochs: 1046 cnt: 150
#train: 0.9857 val: 0.8080 test: 0.8390 best_test: 0.8440 best_val: 0.8240
#train: 0.9857 val: 0.7993 test: 0.8290 best_test: 0.8113 best_val: 0.8190
epochs : 1250
epochs : 1500
epochs : 1750
############################################
epochs: 1822 cnt: 200
#train: 0.9929 val: 0.8120 test: 0.8460 best_test: 0.8440 best_val: 0.8240
#train: 0.9929 val: 0.8037 test: 0.8340 best_test: 0.8113 best_val: 0.8190
epochs : 2000
epochs : 2250
############################################
epochs: 2450 cnt: 250
#train: 0.9714 val: 0.8180 test: 0.8470 best_test: 0.8440 best_val: 0.8240
#train: 0.9717 val: 0.8075 test: 0.8315 best_test: 0.8113 best_val: 0.8190
epochs : 2500
epochs : 2750
############################################
epochs: 2930 cnt: 300
#train: 0.9786 val: 0.8180 test: 0.8490 best_test: 0.8440 best_val: 0.8240
#train: 0.9785 val: 0.8104 test: 0.8344 best_test: 0.8113 best_val: 0.8190
epochs : 3000
epochs : 3250
epochs : 3500
############################################
epochs: 3670 cnt: 350
#train: 0.9786 val: 0.8280 test: 0.8480 best_test: 0.8520 best_val: 0.8320
#train: 0.9785 val: 0.8170 test: 0.8324 best_test: 0.8355 best_val: 0.8279
epochs : 3750
epochs : 4000
epochs : 4250
############################################
epochs: 4429 cnt: 400
#train: 0.9643 val: 0.8160 test: 0.8430 best_test: 0.8520 best_val: 0.8320
#train: 0.9643 val: 0.8076 test: 0.8311 best_test: 0.8355 best_val: 0.8279
epochs : 4500
epochs : 4750
epochs : 5000
############################################
epochs: 5205 cnt: 450
#train: 0.9857 val: 0.8200 test: 0.8500 best_test: 0.8520 best_val: 0.8320
#train: 0.9859 val: 0.8064 test: 0.8393 best_test: 0.8355 best_val: 0.8279
epochs : 5250
epochs : 5500
epochs : 5750
epochs : 6000
epochs : 6250
############################################
epochs: 6256 cnt: 500
#train: 0.9714 val: 0.8220 test: 0.8450 best_test: 0.8520 best_val: 0.8320
#train: 0.9711 val: 0.8153 test: 0.8334 best_test: 0.8355 best_val: 0.8279
epochs : 6500
epochs : 6750
Traceback (most recent call last):
  File "main.py", line 83, in <module>
    main()
  File "main.py", line 80, in main
    best_epoch, tr_acc, tr_f1, best_te_acc, best_val_acc, best_te_f1, best_val_f1, accep, delta_G_e,delta_G_v, delta_g_e, delta_g_v  = episode(args)
  File "/home/hyunjin/NeurIPS2021/epi.py", line 271, in episode
    aug_feature, aug_edge_index, aug_node_list, train_f1, train_acc, cnt, delta_G_e, delta_G_v, delta_g_e, delta_g_v, accep = train(args, features, edge_index, aug_feature, aug_edge_index, aug_node_list, train_index, train_label, num_classes, model, opt_model, agg_model, epoch, cnt)
  File "/home/hyunjin/NeurIPS2021/epi.py", line 195, in train
    f1 = torch.mean(n_f1_score(torch.argmax(output[train_idx], dim=1), train_label, num_classes=num_classes)).item()
  File "/home/hyunjin/NeurIPS2021/utils.py", line 142, in n_f1_score
    prec = precision(pred, target, num_classes)
  File "/home/hyunjin/NeurIPS2021/utils.py", line 106, in precision
    fp = false_positive(pred, target, num_classes).to(torch.float)
  File "/home/hyunjin/NeurIPS2021/utils.py", line 75, in false_positive
    out.append(((pred == i) & (target != i)).sum())
KeyboardInterrupt
